# Generated by Django 3.1.7 on 2021-03-28 14:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sso.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('email_type', models.CharField(choices=[('center', 'Center'), ('region', 'Region'), ('country', 'Country'), ('global_region', 'Country group'), ('person', 'Person'), ('group', 'Group')], db_index=True, max_length=20, verbose_name='email type')),
                ('permission', models.CharField(choices=[('1', 'Everybody'), ('2', 'Diamondway Buddhism'), ('3', 'VIP'), ('4', 'VIP + Diamondway Buddhism')], db_index=True, default='1', max_length=20, verbose_name='access control')),
                ('email', sso.models.CaseInsensitiveEmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this email should be treated as active. Unselect this instead of deleting the email.', verbose_name='active')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'ordering': ['email'],
                'permissions': (('read_email', 'Can read mail data'),),
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('homepage', models.URLField(blank=True, default='', verbose_name='homepage')),
                ('is_guide_email', models.BooleanField(default=False, verbose_name='guide email')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this email should be treated as active. Unselect this instead of deleting the email.', verbose_name='active')),
                ('email', models.OneToOneField(limit_choices_to=models.Q(('email_type', 'group'), ('email_type', 'global_region'), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='emails.email', verbose_name='email address')),
            ],
            options={
                'verbose_name': 'group email',
                'verbose_name_plural': 'group emails',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupEmailManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emails.groupemail', verbose_name='group email')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'group email manager',
                'verbose_name_plural': 'group email managers',
                'unique_together': {('group_email', 'manager')},
            },
        ),
        migrations.CreateModel(
            name='EmailForward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('forward', sso.models.CaseInsensitiveEmailField(max_length=254, verbose_name='email forwarding address')),
                ('primary', models.BooleanField(default=False, help_text='Designates the email address, which can only changed by users with special administration rights.', verbose_name='primary')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emails.email', verbose_name='email address')),
            ],
            options={
                'verbose_name': 'email forwarding',
                'verbose_name_plural': 'email forwardings',
                'ordering': ['forward', 'email'],
                'get_latest_by': 'last_modified',
                'abstract': False,
                'unique_together': {('email', 'forward')},
            },
        ),
        migrations.CreateModel(
            name='EmailAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('alias', sso.models.CaseInsensitiveEmailField(max_length=254, unique=True, verbose_name='email alias address')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emails.email', verbose_name='email address')),
            ],
            options={
                'verbose_name': 'email alias',
                'verbose_name_plural': 'email aliases',
                'ordering': ['alias', 'email'],
                'get_latest_by': 'last_modified',
                'abstract': False,
                'unique_together': {('email', 'alias')},
            },
        ),
    ]

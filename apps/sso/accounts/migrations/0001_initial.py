# Generated by Django 3.1.7 on 2021-03-28 14:56

import current_user.models
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re
import sorl.thumbnail.fields
import sso.accounts.models.user
import sso.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('l10n', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 70 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=70, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=40, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('is_center', models.BooleanField(default=False, help_text='Designates that this user is representing a organisation and not a private person.', verbose_name='organisation')),
                ('is_service', models.BooleanField(default=False, help_text='Designates that this user is representing a service account and not a person.', verbose_name='service')),
                ('is_subscriber', models.BooleanField(default=False, help_text='Designates whether this user is a newsletter subscriber.', verbose_name='subscriber')),
                ('picture', sorl.thumbnail.fields.ImageField(blank=True, upload_to=sso.accounts.models.user.generate_filename, verbose_name='picture')),
                ('gender', models.CharField(blank=True, choices=[('m', 'male'), ('f', 'female')], max_length=255, verbose_name='gender')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('homepage', models.URLField(blank=True, max_length=512, verbose_name='homepage')),
                ('language', models.CharField(blank=True, choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], max_length=254, verbose_name='language')),
                ('timezone', models.CharField(blank=True, max_length=254, verbose_name='timezone')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='valid until')),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last ip address')),
                ('is_stored_permanently', models.BooleanField(default=False, help_text='Do not delete, even if inactive', verbose_name='store permanently')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'permissions': (('read_user', 'Can read user data'), ('access_all_users', 'Can access all users'), ('app_admin_access_all_users', 'Can access all users as App admin')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, help_text='Overwrites the alphabetic order.')),
                ('title', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, max_length=2047)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('global_navigation', models.BooleanField(default=True, help_text='Designates whether this application should be shown in the global navigation bar.', verbose_name='global navigation')),
                ('is_internal', models.BooleanField(default=False, verbose_name='internal')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this application should be provided.', verbose_name='active')),
                ('redirect_to_after_first_login', models.BooleanField(default=False, help_text='Designates whether the user should redirected to this app after the first login.', verbose_name='redirect to after first login')),
                ('notes', models.TextField(blank=True, max_length=2048, verbose_name='Notes')),
                ('required_scope', models.CharField(blank=True, help_text='Required OAuth2 scope to get the application roles.', max_length=32, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='Required scope')),
            ],
            options={
                'verbose_name': 'application',
                'verbose_name_plural': 'applications',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
            ],
            options={
                'verbose_name': 'application admin',
                'verbose_name_plural': 'application admins',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_inheritable_by_org_admin', models.BooleanField(default=True, help_text='Designates that the role can inherited by a organisation admin.', verbose_name='inheritable by organisation admin')),
                ('is_inheritable_by_global_admin', models.BooleanField(default=True, help_text='Designates that the role can inherited by a global admin.', verbose_name='inheritable by global admin')),
                ('is_organisation_related', models.BooleanField(default=False, help_text='Designates that the role will be deleted in case of a change of the organisation.', verbose_name='organisation related')),
            ],
            options={
                'verbose_name': 'application role',
                'verbose_name_plural': 'application roles',
                'ordering': ['application', 'role'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary', models.BooleanField(default=False, verbose_name='primary')),
            ],
            options={
                'verbose_name': 'organisation membership',
                'verbose_name_plural': 'organisation memberships',
            },
        ),
        migrations.CreateModel(
            name='OneTimeMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('title', models.CharField(default='', max_length=255, verbose_name='title')),
                ('message', models.TextField(blank=True, default='', max_length=2048, verbose_name='message')),
            ],
            options={
                'verbose_name': 'one time message',
                'verbose_name_plural': 'one time messages',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('order', models.IntegerField(default=0, help_text='Overwrites the alphabetic order.')),
                ('is_inheritable_by_org_admin', models.BooleanField(default=True, help_text='Designates that the role profile can inherited by a organisation admin.', verbose_name='inheritable by organisation admin')),
                ('is_inheritable_by_global_admin', models.BooleanField(default=True, help_text='Designates that the role profile can inherited by a global admin.', verbose_name='inheritable by global admin')),
                ('is_organisation_related', models.BooleanField(default=False, help_text='Designates that the role will be deleted in case of a change of the organisation.', verbose_name='organisation related')),
                ('application_roles', models.ManyToManyField(blank=True, help_text='Associates a group of application roles that are usually assigned together.', to='accounts.ApplicationRole')),
            ],
            options={
                'verbose_name': 'role profile',
                'verbose_name_plural': 'role profiles',
                'ordering': ['order', 'name'],
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('phone', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\+\\d{1,3}((-?\\d+)|(\\s?\\(\\d+\\)\\s?)|\\s?\\d+){1,9}$'), 'Enter a valid phone number i.e. +49 (531) 123456', 'invalid')], verbose_name='phone number')),
                ('primary', models.BooleanField(default=False, verbose_name='primary')),
                ('phone_type', models.CharField(choices=[('home', 'Home'), ('mobile', 'Mobile'), ('work', 'Business'), ('fax', 'Fax'), ('pager', 'Pager'), ('other', 'Other')], help_text='Mobile, home, office, etc.', max_length=20, verbose_name='phone type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'phone number',
                'verbose_name_plural': 'phone numbers',
                'ordering': ['-primary'],
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('note', models.TextField(max_length=1024, verbose_name='Note')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user note',
                'verbose_name_plural': 'user notes',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('email', sso.models.CaseInsensitiveEmailField(max_length=254, unique=True, verbose_name='email address')),
                ('confirmed', models.BooleanField(default=False, verbose_name='confirmed')),
                ('primary', models.BooleanField(default=False, verbose_name='primary')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'email address',
                'verbose_name_plural': 'email addresses',
                'ordering': ['email'],
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('value', models.CharField(max_length=255, verbose_name='value')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAssociatedSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=255)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'associated system',
                'verbose_name_plural': 'associated systems',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('addressee', models.CharField(max_length=80, verbose_name='addressee')),
                ('street_address', models.TextField(blank=True, help_text='Full street address, with house number, street name, P.O. box, and extended street address information.', max_length=512, verbose_name='street address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('city_native', models.CharField(blank=True, max_length=100, verbose_name='city in native language')),
                ('postal_code', models.CharField(blank=True, max_length=30, verbose_name='postal code')),
                ('region', models.CharField(blank=True, help_text='State or region', max_length=100, verbose_name='region')),
                ('primary', models.BooleanField(default=False, verbose_name='primary')),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Business'), ('other', 'Other')], max_length=20, verbose_name='address type')),
                ('country', models.ForeignKey(limit_choices_to={'active': True}, on_delete=django.db.models.deletion.CASCADE, to='l10n.country', verbose_name='country')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ['addressee'],
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleProfileAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.roleprofile', verbose_name='role profile')),
            ],
            options={
                'verbose_name': 'role profile admin',
                'verbose_name_plural': 'role profile admins',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('order', models.IntegerField(default=0, help_text='Overwrites the alphabetic order.')),
                ('group', models.ForeignKey(blank=True, help_text='Associated group for SSO internal permission management.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OrganisationChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('message', models.TextField(blank=True, help_text='Message for the organisation administrator.', max_length=2048, verbose_name='message')),
                ('comment', models.TextField(blank=True, max_length=2048, verbose_name='Comment')),
                ('status', models.CharField(choices=[('o', 'open'), ('c', 'canceled'), ('v', 'approved'), ('d', 'denied')], default='o', max_length=255, verbose_name='status')),
                ('completed_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisationchange_completed_by', to=settings.AUTH_USER_MODEL, verbose_name='completed by')),
                ('last_modified_by_user', current_user.models.CurrentUserField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisationchange_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'organisation change',
                'verbose_name_plural': 'organisation change',
                'get_latest_by': 'last_modified',
                'abstract': False,
            },
        ),
    ]
